# Generated by Django 4.2.16 on 2025-09-14 18:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("events", "0002_event_end_date_event_event_type_alter_event_date_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("attendees", "0001_initial"),
        ("attendance", "0002_alter_devicefootprint_attendance_record_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AttendanceCheckpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "checkpoint_type",
                    models.CharField(
                        choices=[
                            ("entrance", "Entrance"),
                            ("hourly", "Hourly Check"),
                            ("break", "Break Time"),
                            ("lunch", "Lunch Break"),
                            ("activity", "Activity Start"),
                            ("exit", "Exit"),
                            ("custom", "Custom"),
                        ],
                        default="custom",
                        max_length=20,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 'Entrance', '10 AM Check', 'Lunch Break'",
                        max_length=100,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "required_time",
                    models.TimeField(help_text="Required time for this checkpoint"),
                ),
                (
                    "grace_period_minutes",
                    models.PositiveIntegerField(
                        default=15, help_text="Minutes before/after required time"
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True,
                        help_text="Must attendees complete this checkpoint?",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=1, help_text="Order of checkpoint (1, 2, 3...)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "checkpoint_code",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.event",
                    ),
                ),
                (
                    "event_session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.eventsession",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "required_time"],
            },
        ),
        migrations.CreateModel(
            name="CheckpointAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("device_fingerprint", models.TextField()),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                (
                    "is_on_time",
                    models.BooleanField(
                        default=True,
                        help_text="Was attendance recorded within the time window?",
                    ),
                ),
                (
                    "is_late",
                    models.BooleanField(
                        default=False,
                        help_text="Was attendance recorded after the grace period?",
                    ),
                ),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="attendees.attendee",
                    ),
                ),
                (
                    "checkpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="attendance.attendancecheckpoint",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.event",
                    ),
                ),
                (
                    "event_session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.eventsession",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddField(
            model_name="devicefootprint",
            name="checkpoint_attendance",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="attendance.checkpointattendance",
            ),
        ),
        migrations.AddIndex(
            model_name="checkpointattendance",
            index=models.Index(
                fields=["timestamp"], name="attendance__timesta_eab0e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="checkpointattendance",
            index=models.Index(
                fields=["checkpoint", "attendee"], name="attendance__checkpo_3a53a5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="checkpointattendance",
            index=models.Index(
                fields=["is_on_time", "is_late"], name="attendance__is_on_t_fe29bf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="checkpointattendance",
            unique_together={
                ("checkpoint", "attendee", "event"),
                ("checkpoint", "attendee", "event_session"),
            },
        ),
        migrations.AddIndex(
            model_name="attendancecheckpoint",
            index=models.Index(
                fields=["required_time", "is_active"],
                name="attendance__require_11bb1a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecheckpoint",
            index=models.Index(
                fields=["event", "order"], name="attendance__event_i_28c2e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecheckpoint",
            index=models.Index(
                fields=["event_session", "order"], name="attendance__event_s_4c38de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecheckpoint",
            index=models.Index(
                fields=["checkpoint_code"], name="attendance__checkpo_6b07bf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="attendancecheckpoint",
            unique_together={("event_session", "order"), ("event", "order")},
        ),
    ]
